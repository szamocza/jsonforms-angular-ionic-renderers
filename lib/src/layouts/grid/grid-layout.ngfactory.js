/**
 * @fileoverview This file was generated by the Angular template compiler. Do not edit.
 *
 * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}
 * tslint:disable
 */ 
import * as i0 from "@angular/core";
import * as i1 from "jsonforms/packages/angular/lib/jsonforms.component";
import * as i2 from "@angular-redux/store/lib/src/components/ng-redux";
import * as i3 from "@angular/common";
import * as i4 from "./grid-layout";
var styles_GridLayoutRenderer = [".bordered[_ngcontent-%COMP%] {\n                border: 1px solid lightgrey; \n                border-radius: 2px;\n                box-shadow: 0 2px 2px 0 rgba(0, 0, 0, 0.14), 0 3px 1px -2px rgba(0, 0, 0, 0.2), 0 1px 5px 0 rgba(0, 0, 0, 0.12);\n            }\n            .grid-layout-wrapper[_ngcontent-%COMP%] {\n                padding: 10px;                \n            }\n            .grid-label[_ngcontent-%COMP%] {\n                font-weight: bold;\n            }\n            .grid-wrapper[_ngcontent-%COMP%] {\n                display: grid; \n                align-items: end;\n                grid-template-columns: 25% 25% 25% 25%;\n            }\n            .grid-wrapper.only-three[_ngcontent-%COMP%] {\n                grid-template-columns: 33.3% 33.3% 33.3%;\n            }\n            .grid-wrapper.only-two[_ngcontent-%COMP%] {\n                grid-template-columns: 50% 50%;\n            }\n            .grid-wrapper.only-one[_ngcontent-%COMP%] {\n                grid-template-columns: 100%;\n            }            \n\n            @media screen and (max-width: 1024px) {\n                .grid-wrapper[_ngcontent-%COMP%] {\n                    grid-template-columns: 33.3% 33.3% 33.3%;\n                }\n                .grid-wrapper.only-two[_ngcontent-%COMP%] {\n                    grid-template-columns: 50% 50%;\n                }\n                .grid-wrapper.only-one[_ngcontent-%COMP%] {\n                    grid-template-columns: 100%;\n                }\n            }\n\n            @media screen and (max-width: 720px) {\n                .grid-wrapper[_ngcontent-%COMP%] {\n                    grid-template-columns: 50% 50%;\n                }\n                .grid-wrapper.only-three[_ngcontent-%COMP%] {\n                    grid-template-columns: 50% 50%;\n                }\n                .grid-wrapper.only-one[_ngcontent-%COMP%] {\n                    grid-template-columns: 100%;\n                }\n            }\n            \n            @media screen and (max-width: 500px) {\n                .grid-wrapper.only-three[_ngcontent-%COMP%] {\n                    grid-template-columns: 100%;\n                }\n                .grid-wrapper.only-two[_ngcontent-%COMP%] {\n                    grid-template-columns: 100%;\n                }\n                .grid-wrapper[_ngcontent-%COMP%] {\n                    grid-template-columns: 100%;\n                }\n            }"];
var RenderType_GridLayoutRenderer = i0.ɵcrt({ encapsulation: 0, styles: styles_GridLayoutRenderer, data: {} });
export { RenderType_GridLayoutRenderer as RenderType_GridLayoutRenderer };
function View_GridLayoutRenderer_1(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, "div", [["class", "grid-label"]], null, null, null, null, null)), (_l()(), i0.ɵted(1, null, ["\n            ", "\n        "]))], null, function (_ck, _v) { var _co = _v.component; var currVal_0 = _co.label; _ck(_v, 1, 0, currVal_0); }); }
function View_GridLayoutRenderer_2(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 4, "div", [], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, ["\n                "])), (_l()(), i0.ɵeld(2, 16777216, null, null, 1, "jsonforms-outlet", [], null, null, null, null, null)), i0.ɵdid(3, 212992, null, 0, i1.JsonFormsOutlet, [i0.ViewContainerRef, i0.ComponentFactoryResolver, i2.NgRedux], { uischema: [0, "uischema"], schema: [1, "schema"], path: [2, "path"] }, null), (_l()(), i0.ɵted(-1, null, ["\n            "]))], function (_ck, _v) { var _co = _v.component; var currVal_0 = _v.context.$implicit; var currVal_1 = _co.schema; var currVal_2 = _co.path; _ck(_v, 3, 0, currVal_0, currVal_1, currVal_2); }, null); }
export function View_GridLayoutRenderer_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵted(-1, null, ["\n    "])), (_l()(), i0.ɵeld(1, 0, null, null, 15, "div", [["class", "grid-layout-wrapper"]], null, null, null, null, null)), i0.ɵdid(2, 278528, null, 0, i3.NgClass, [i0.IterableDiffers, i0.KeyValueDiffers, i0.ElementRef, i0.Renderer2], { klass: [0, "klass"], ngClass: [1, "ngClass"] }, null), i0.ɵpod(3, { "bordered": 0 }), i0.ɵdid(4, 278528, null, 0, i3.NgStyle, [i0.KeyValueDiffers, i0.ElementRef, i0.Renderer2], { ngStyle: [0, "ngStyle"] }, null), (_l()(), i0.ɵted(-1, null, ["\n        "])), (_l()(), i0.ɵand(16777216, null, null, 1, null, View_GridLayoutRenderer_1)), i0.ɵdid(7, 16384, null, 0, i3.NgIf, [i0.ViewContainerRef, i0.TemplateRef], { ngIf: [0, "ngIf"] }, null), (_l()(), i0.ɵted(-1, null, ["\n        "])), (_l()(), i0.ɵeld(9, 0, null, null, 6, "div", [["class", "grid-wrapper"]], null, null, null, null, null)), i0.ɵdid(10, 278528, null, 0, i3.NgClass, [i0.IterableDiffers, i0.KeyValueDiffers, i0.ElementRef, i0.Renderer2], { klass: [0, "klass"], ngClass: [1, "ngClass"] }, null), i0.ɵpod(11, { "only-three": 0, "only-two": 1, "only-one": 2 }), (_l()(), i0.ɵted(-1, null, ["\n            "])), (_l()(), i0.ɵand(16777216, null, null, 1, null, View_GridLayoutRenderer_2)), i0.ɵdid(14, 802816, null, 0, i3.NgForOf, [i0.ViewContainerRef, i0.TemplateRef, i0.IterableDiffers], { ngForOf: [0, "ngForOf"] }, null), (_l()(), i0.ɵted(-1, null, ["\n        "])), (_l()(), i0.ɵted(-1, null, ["            \n    "])), (_l()(), i0.ɵted(-1, null, ["\n\n  "]))], function (_ck, _v) { var _co = _v.component; var currVal_0 = "grid-layout-wrapper"; var currVal_1 = _ck(_v, 3, 0, _co.label); _ck(_v, 2, 0, currVal_0, currVal_1); var currVal_2 = ((_co.uischema && _co.uischema.options) && _co.uischema.options.style); _ck(_v, 4, 0, currVal_2); var currVal_3 = _co.label; _ck(_v, 7, 0, currVal_3); var currVal_4 = "grid-wrapper"; var currVal_5 = _ck(_v, 11, 0, ((_co.uischema && _co.uischema.options) && (_co.uischema.options.columns == 3)), ((_co.uischema && _co.uischema.options) && (_co.uischema.options.columns == 2)), ((_co.uischema && _co.uischema.options) && (_co.uischema.options.columns == 1))); _ck(_v, 10, 0, currVal_4, currVal_5); var currVal_6 = ((_co.uischema == null) ? null : _co.uischema.elements); _ck(_v, 14, 0, currVal_6); }, null); }
export function View_GridLayoutRenderer_Host_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, "jsonforms-grid-layout", [["class", "grid-layout-control"]], null, null, null, View_GridLayoutRenderer_0, RenderType_GridLayoutRenderer)), i0.ɵdid(1, 245760, null, 0, i4.GridLayoutRenderer, [i2.NgRedux], null, null)], function (_ck, _v) { _ck(_v, 1, 0); }, null); }
var GridLayoutRendererNgFactory = i0.ɵccf("jsonforms-grid-layout", i4.GridLayoutRenderer, View_GridLayoutRenderer_Host_0, { uischema: "uischema", schema: "schema", path: "path" }, {}, []);
export { GridLayoutRendererNgFactory as GridLayoutRendererNgFactory };
//# sourceMappingURL=grid-layout.ngfactory.js.map